import "../globals.css";
import { ConvexClientProvider } from "../ConvexClientProvider";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { AppSidebar } from "@/components/app-sidebar";
import { SiteHeader } from "@/components/site-header";
import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar";
import { ThemeProvider } from "@/components/ThemeProvider";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function AdminLayout({ children }: { children: React.ReactNode }) {
    const customStyle: Record<string, string> = {
        "--sidebar-width": "calc(var(--spacing) * 72)",
        "--header-height": "calc(var(--spacing) * 12)",
    };

    return (
        <html lang="en" suppressHydrationWarning>
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                <ConvexClientProvider>
                    <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
                        <SidebarProvider style={customStyle as React.CSSProperties}>
                            <AppSidebar variant="inset" collapsible="icon" />
                            <SidebarInset>
                                <SiteHeader />
                                <div className="flex flex-1 flex-col">
                                    <div className="@container/main flex flex-1 flex-col gap-2">
                                        {children}
                                    </div>
                                </div>
                            </SidebarInset>
                        </SidebarProvider>
                    </ThemeProvider>
                </ConvexClientProvider>
            </body>
        </html>
    );
}
